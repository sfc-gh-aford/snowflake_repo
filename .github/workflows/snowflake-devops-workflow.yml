name: snowflake-devops-workflow

# Controls when the action will run. 
on:
  push:
    branches:
      - main
    paths:
      - 'schemachange/scripts/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy-snowflake-changes-job:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Python 3.8.x
        uses: actions/setup-python@v4
        with:
          python-version: 3.8.x

      - name: Run schemachange
        env:
          SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SF_USER_NAME: ${{ secrets.SF_USER_NAME }} # Ensure secret name matches this
          SF_ROLE: ${{ secrets.SF_ROLE }}
          SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SF_DATABASE: ${{ secrets.SF_DATABASE }}
          SF_PASSWORD: ${{ secrets.SF_PASSWORD }}
        run: |
          echo "GITHUB_WORKSPACE is: $GITHUB_WORKSPACE"
          
          # Debugging: List contents of the GITHUB_WORKSPACE to confirm layout
          echo "Contents of GITHUB_WORKSPACE ($GITHUB_WORKSPACE):"
          ls -F "$GITHUB_WORKSPACE/"
          
          # Confirming the schemachange folder exists directly here
          echo "Contents of $GITHUB_WORKSPACE/schemachange/ (if it exists):"
          ls -F "$GITHUB_WORKSPACE/schemachange/"
          
          python --version
          echo "Step 1: Installing schemachange"
          pip install schemachange

          echo "Step 2: Creating connections.toml"
          # Create the config directory inside the 'schemachange' folder directly under GITHUB_WORKSPACE
          mkdir -p "$GITHUB_WORKSPACE/schemachange/config"
          echo "Created config directory: $GITHUB_WORKSPACE/schemachange/config"

          # Write the connections.toml file
          cat <<EOF > "$GITHUB_WORKSPACE/schemachange/config/connections.toml"
          [connections.default]
          account = "${{ secrets.SF_ACCOUNT }}"
          user = "${{ secrets.SF_USER_NAME }}"
          role = "${{ secrets.SF_ROLE }}"
          warehouse = "${{ secrets.SF_WAREHOUSE }}"
          database = "${{ secrets.SF_DATABASE }}"
          password = "${{ secrets.SF_PASSWORD }}"
          EOF
          
          echo "Contents of connections.toml (partial):"
          cat "$GITHUB_WORKSPACE/schemachange/config/connections.toml" | grep -v 'password' # safer print

          echo "Step 3: Running schemachange with connections.toml"
          schemachange deploy \
            -f "$GITHUB_WORKSPACE/schemachange/scripts" \ # Path to your SQL scripts
            --config-folder "$GITHUB_WORKSPACE/schemachange/config" \ # Path to connections.toml
            --connection-name default \
            -c $SF_DATABASE.SCHEMACHANGE.CHANGE_HISTORY \
            --create-change-history-table

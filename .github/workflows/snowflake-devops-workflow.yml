name: snowflake-devops-workflow

# Controls when the action will run. 
on:
  push:
    branches:
      - main
    paths:
      - 'schemachange/scripts/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy-snowflake-changes-job:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Python 3.8.x
        uses: actions/setup-python@v4
        with:
          python-version: 3.8.x

      - name: Run schemachange
        env:
          # Keep these for now, as schemachange might still pick them up as fallbacks
          # but the TOML file is the primary fix for the deprecation warning
          SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SF_USER_NAME: ${{ secrets.SF_USER_NAME }}
          SF_ROLE: ${{ secrets.SF_ROLE }}
          SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SF_DATABASE: ${{ secrets.SF_DATABASE }}
          SF_PASSWORD: ${{ secrets.SF_PASSWORD }} # Ensure this matches your secret name
        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          python --version
          echo "Step 1: Installing schemachange"
          pip install schemachange

          echo "Step 2: Creating connections.toml"
          # Create a config directory if it doesn't exist
          mkdir -p $GITHUB_WORKSPACE/schemachange/config

          # Write the connections.toml file using GitHub Secrets
          cat <<EOF > $GITHUB_WORKSPACE/schemachange/config/connections.toml
          [connections.default]
          account = "${{ secrets.SF_ACCOUNT }}"
          user = "${{ secrets.SF_USER_NAME }}"
          role = "${{ secrets.SF_ROLE }}"
          warehouse = "${{ secrets.SF_WAREHOUSE }}"
          database = "${{ secrets.SF_DATABASE }}"
          password = "${{ secrets.SF_PASSWORD }}"
          EOF

          echo "Step 3: Running schemachange with connections.toml"
          # Now, run schemachange without -a, -u, -r, -w, -d, -p
          # Use --config-folder to point to where connections.toml is
          # Use --connection-name to specify which connection to use (e.g., 'default')
          schemachange deploy \
            -f $GITHUB_WORKSPACE/schemachange/scripts \
            --config-folder $GITHUB_WORKSPACE/schemachange/config \
            --connection-name default \
            -c $SF_DATABASE.SCHEMACHANGE.CHANGE_HISTORY \
            --create-change-history-table
